装饰者模式：动态地将责任附加到对象上。若要扩展功能，装饰者提供了比继承更有弹性的替代方案。

设计原则：类应该对拓展开放，对修改关闭。

要点：
装饰者和被装饰对象有相同的超类型。
装饰者可以在所委托被装饰者的行为之前/或之后，加上自己的行为，甚至将被装饰者的行为整个取代掉，已达到特定的目的。
你可以用无数个装饰者包装一个组件。
装饰者会导致设计中出现许多小对象，如果过度使用，会让程序变得很复杂。

